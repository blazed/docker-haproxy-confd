global
    log 127.0.0.1 local0 info
    log 127.0.0.1 local0 notice
    log-tag haproxy
    maxconn 20000
    chroot /var/lib/haproxy
    user haproxy
    group haproxy

defaults
    mode http
    log global

    # Setting options
    option httplog
    option logasap
    option dontlognull              # Disable logging of null connections as these can pollute the logs
    option redispatch               # Enable session redistribution in case of connection failure
    option tcp-smart-accept         # Performance tweak, saving one ACK packet during the accept sequence
    option tcp-smart-connect        # Performance tweak, saving of one ACK packet during the connect sequence
    option forwardfor
    option http-server-close

    # Setting timeouts
    timeout connect           5s
    timeout client           20s
    timeout server           15s
    timeout http-keep-alive   1s
    timeout check             2s

    # Slowloris protection
    timeout http-request     10s     # Slowloris protection
    timeout tarpit            1m     # tarpit hold time
    timeout queue             1m
    backlog                10000

frontend www_http
    bind *:80
    reqadd X-Forwarded-Proto:\ http
    option httplog
    option forwardfor
    option http-server-close
    {{if lsdir "/haproxy/hosts/"}}
    {{ range $host := lsdir "/haproxy/hosts/" }}
    {{ $server := base $host }}
    {{ $proxy_path := printf "/haproxy/hosts/%s/upstream" $server }}
    {{ $service_name := getv $proxy_path }}
    {{ $service_path := printf "/services/%s/" $service_name }}
    {{ if ls $service_path }}
    acl host_{{$service_name}} hdr(host) -i {{$host}}
    use_backend {{$service_name}}_cluster if host_{{$service_name}}
    {{end}}
    {{end}}
    capture cookie  SERVERID                     len 32
    capture request header Referer               len 64
    capture request header User-Agent            len 128
    capture request header Host                  len 64
    capture request header X-Forwarded-For       len 64
    capture request header Accept-Encoding       len 64
    {{ end }}

{{if lsdir "/services/"}}
  {{range $service := lsdir "/services/"}}
  backend {{ base $service }}_cluster
  balance roundrobin
  cookie SERVERID insert indirect
  {{ $endpoints := printf "/services/%s/*" $service }}{{ range gets $endpoints }}
  {{ $id := printf .Key }}{{ with dir $id }}
  server {{ base $service }}-{{ base $id  }} {{ getv $id }} cookie {{ base $service }}-{{ base $id }} check
  # id {{ base $id }}
  # service {{ base $service }}
  {{ end }}
  {{ end }}
  {{ end }}
{{end}}
